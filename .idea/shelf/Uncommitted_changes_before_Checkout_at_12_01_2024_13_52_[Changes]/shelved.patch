Index: app/templates/output.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends 'base.html' %}\r\n\r\n{% block title %}Course Recommendations{% endblock %}\r\n\r\n{% block content %}\r\n<style>\r\n    .content-background {\r\n        background: url('{{ url_for('static', filename='images/undraw_trip_dv9f.svg') }}') no-repeat center center;\r\n        background-size: 85%; /* Adjust the percentage to make the image smaller */\r\n    }\r\n    .chat-background {\r\n        background: url('{{ url_for('static', filename='images/undraw_text_field_htlv.svg') }}') no-repeat center center;\r\n        background-size: 60%; /* Adjust the percentage to make the image smaller */\r\n    }\r\n    .content-container {\r\n        min-height: calc(100vh - 3rem);; /* Full height */\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n    .card-header {\r\n        background-color: #f0f0f0;\r\n        font-weight: bold;\r\n    }\r\n    .card {\r\n        border: none;\r\n        transition: transform 0.5s;\r\n    }\r\n    .card-hover:hover {\r\n        transform: scale(1.05);\r\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    }\r\n    .confidence-rating {\r\n        font-size: 0.9em;\r\n        color: #28a745; /* Bootstrap success color */\r\n    }\r\n    .container-pane, .chat-pane{\r\n        transition: transform 0.5s ease-in-out; /* Slower transition */\r\n    }\r\n    .container-pane {\r\n        transform: translateX(0);\r\n    }\r\n    .chat-pane {\r\n        width: 40%; /* Half screen width */\r\n        position: fixed;\r\n        top: 0;\r\n        right: -40%; /* Adjusted to match new width */\r\n        height: 100vh;\r\n        overflow-y: auto;\r\n        z-index: 1030; /* Slightly less than the navbar z-index */\r\n        padding-top: 1em;\r\n        padding-bottom: 1em;\r\n        padding-right: 1em;\r\n        background-color: #fff2cb;\r\n    }\r\n    .chat-header {\r\n        padding: 0.5rem 1rem; /* Padding for header content */\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        border-radius: 0.25rem;\r\n        font-weight: bold;\r\n    }\r\n    .chat-header button {\r\n        background: none;\r\n        border: none;\r\n        font-size: 1.5rem;\r\n    }\r\n    .chat-container {\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: calc(100vh - 50px); /* Adjusted to account for the added margin */\r\n        border: 1px solid #ccc;\r\n        box-shadow: 0 2px 10px rgba(0,0,0,0.1);\r\n        background-color: #fbfcff;\r\n        overflow: hidden;\r\n    }\r\n    .chat-area {\r\n        padding: 10px;\r\n        overflow-y: auto;\r\n        display: flex;\r\n        flex-direction: column;\r\n        flex-grow: 1;\r\n        align-items: flex-start; /* Align items to the start/left by default */\r\n    }\r\n    .message {\r\n        display: inline-block; /* Make the bubble only as wide as the content */\r\n        padding: 10px;\r\n        margin-bottom: 10px;\r\n        border-radius: 15px;\r\n        word-wrap: break-word; /* Ensure long words do not break the layout */\r\n    }\r\n    .user-message {\r\n        background-color: #dcf8c6;\r\n        margin-right: auto; /* Keep messages on the left */\r\n        max-width: 70%;\r\n    }\r\n    .bot-message {\r\n        background-color: #ffdede;\r\n        margin-left: auto; /* Keep messages on the right */\r\n        max-width: 70%;\r\n    }\r\n    .show-chat {\r\n        transform: translateX(-45%); /* Adjusted to match new width */\r\n        transition: transform 0.5s ease-in-out;\r\n    }\r\n    .show-chat-pane {\r\n        transform: translateX(-100%); /* Adjusted to match new width */\r\n        transition: transform 0.5s ease-in-out;\r\n    }\r\n    /* Ensure the navbar has a higher z-index */\r\n    .navbar {\r\n        z-index: 1040; /* This should be higher than the chat pane */\r\n    }\r\n</style>\r\n\r\n<!-- Main content container -->\r\n<div class=\"container mt-5 content-background content-container container-pane\">\r\n    <h1 class=\"text-center mb-5 display-4\">Top Course Recommendations</h1>\r\n\r\n    <div class=\"row mb-4 justify-content-center\">\r\n        <div class=\"col-lg-6 mb-3\">\r\n            <div class=\"card h-100 shadow\" style=\"border: 2px solid #6c63fd;\">\r\n                <div class=\"card-body d-flex align-items-center justify-content-center text-center\">\r\n                    <p class=\"lead\">\r\n                        Your input: {{ user_input }}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row mb-4 justify-content-center\">\r\n        <div class=\"col-lg-6 mb-3\">\r\n            <div class=\"card h-100 shadow\">\r\n                <div class=\"card-body d-flex align-items-center justify-content-center text-center\">\r\n                    <p class=\"lead\">\r\n                        Below you will find our recommendations based on your interests.<br>\r\n                        Click on a course to chat with your assistant and learn more about it.<br>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row justify-content-center\">\r\n        {% for course in courses %}\r\n        <div class=\"col-md-6 col-lg-4 mb-4\">\r\n            <div class=\"card card-hover h-100 shadow\" onclick=\"openChat('{{ course.title }}')\">\r\n                <div class=\"card-header\" style=\"background-color: #ffdf9c; color: #333;\">{{ course.title }}</div>\r\n                <div class=\"card-body\">\r\n                    <p class=\"card-text\">\r\n                        <strong>Description:</strong><br>{{ course.description }}<br>\r\n                        <strong>Duration:</strong><br>{{ course.duration }}<br>\r\n                        <strong>Level:</strong><br>{{ course.level }}<br>\r\n                    </p>\r\n                </div>\r\n                <div class=\"card-footer\">\r\n                    <span class=\"confidence-rating\">Confidence: {{ \"%.2f\"|format(course.similarity * 100) }}%</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {% endfor %}\r\n    </div>\r\n\r\n    <div class=\"row justify-content-center mt-4\">\r\n        <div class=\"col-lg-6 text-center mb-4\">\r\n            <a class=\"btn btn-outline-secondary btn-lg\" href=\"{{ url_for('survey') }}\" role=\"button\">Take the Survey</a>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- Chatbot interface panel -->\r\n<div class=\"chat-pane card\" id=\"chatPane\">\r\n    <div class=\"chat-header card-header\" style=\"background-color: #ffdf9c; color: #333;\">\r\n        <div id=\"chatCourseName\">\r\n            Ask Questions to your Assistant\r\n        </div>\r\n        <button onclick=\"closeChat()\" style=\"background-color: transparent; border: none; font-size: 1.5rem;\">\r\n            &times;\r\n        </button>\r\n    </div>\r\n    <div class=\"chat-container card-body chat-background\">\r\n        <div class=\"chat-area\" id=\"chatArea\">\r\n            <!-- Messages will be dynamically inserted here -->\r\n        </div>\r\n        <!-- Chat input and predetermined questions sections (moved outside chat container) -->\r\n        <div id=\"chatInputSection\">\r\n            <div class=\"input-group input-container\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Ask me something...\" name=\"input_text\" id=\"userInput\">\r\n                <button onclick=\"sendChat()\" class=\"btn btn-outline-secondary\" type=\"submit\">\r\n                    <i class=\"fas fa-paper-plane\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        <div id=\"predeterminedQuestionsSection\" style=\"display: none;\">\r\n            <div class=\"card shadow\">\r\n                    <div class=\"card-body text-center\">\r\n                        <h6 class=\"mb-3\">Example Questions</h6>\r\n                        <div class=\"d-grid gap-2\">\r\n                            <button type=\"button\" class=\"btn btn-light example-input w-100\" data-input=\"How was this course recommendation generated?\">\r\n                                How was this course recommendation generated?\r\n                            </button>\r\n                            <button type=\"button\" class=\"btn btn-light example-input w-100\" data-input=\"Tell me more about the factors considered for course predictions.\">\r\n                                What factors are considered for course predictions?\r\n                            </button>\r\n                            <button type=\"button\" class=\"btn btn-light example-input w-100\" data-input=\"Explain the confidence rating for course suggestions.\">\r\n                                How does the confidence rating work for course suggestions?\r\n                            </button>\r\n                            <button type=\"button\" class=\"btn btn-light example-input w-100\" data-input=\"Can you recommend courses in a specific field of study?\">\r\n                                Can you recommend courses in a specific field of study?\r\n                            </button>\r\n                            <button type=\"button\" class=\"btn btn-light example-input w-100\" data-input=\"Explain how chatting with a large language model works.\">\r\n                                How do you generate answers to my questions?\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<script>\r\n    var courseName = \"\";\r\n    var isChatBotResponding = false;\r\n\r\n    toggleChatFunctions();\r\n\r\n    document.querySelectorAll('.example-input').forEach(function (example) {\r\n        example.addEventListener('click', function () {\r\n            if (isChatBotResponding) {\r\n                return; // Prevent asking questions when chatbot is responding\r\n            }\r\n            document.getElementById('userInput').value = example.getAttribute('data-input');\r\n            sendChat();\r\n        });\r\n    });\r\n\r\n    function toggleChatFunctions() {\r\n        var chatInputSection = document.getElementById('chatInputSection');\r\n        var predeterminedQuestionsSection = document.getElementById('predeterminedQuestionsSection');\r\n        var cbToggle = document.getElementById('cb-toggle');\r\n\r\n        if (cbToggle.checked) {\r\n            // Toggle is checked, show chat input, and hide predetermined questions\r\n            chatInputSection.style.display = 'block';\r\n            predeterminedQuestionsSection.style.display = 'none';\r\n        } else {\r\n            // Toggle is not checked, hide chat input, and show predetermined questions\r\n            chatInputSection.style.display = 'none';\r\n            predeterminedQuestionsSection.style.display = 'block';\r\n        }\r\n    }\r\n\r\n    function openChat(courseName) {\r\n        this.courseName = courseName;\r\n        document.querySelector('.container-pane').classList.add('show-chat');\r\n        document.querySelector('.chat-pane').classList.add('show-chat-pane');\r\n        document.getElementById('chatCourseName').innerText = \"Ask Questions about \" + courseName; // If you want to display the course name in the chat pane\r\n    }\r\n\r\n    function closeChat() {\r\n        document.querySelector('.container-pane').classList.remove('show-chat');\r\n        document.querySelector('.chat-pane').classList.remove('show-chat-pane');\r\n    }\r\n\r\n    async function sendChat() {\r\n        if (isChatBotResponding) {\r\n            return; // Prevent sending multiple queries while chatbot is responding\r\n        }\r\n\r\n        isChatBotResponding = true; // Set flag to indicate chatbot is responding\r\n\r\n        // Disable the input field and predetermined questions buttons\r\n        document.getElementById('userInput').disabled = true;\r\n        document.querySelectorAll('.example-input').forEach(function (example) {\r\n            example.disabled = true;\r\n        });\r\n\r\n        let chatInput = document.getElementById(\"userInput\").value.trim();\r\n        if (!chatInput) return; // Don't send empty messages\r\n\r\n        // Add user's message to the chat area\r\n        appendMessage(chatInput, 'user');\r\n\r\n        // Clear input after sending\r\n        document.getElementById(\"userInput\").value = '';\r\n\r\n        try {\r\n            // Start the POST request to send the message\r\n            const response = await fetch('/chat', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ message: \"Input Query:{{ user_input }}\\nPredicted Course:\"+courseName+\"\\nChat Input:\" + chatInput })\r\n            });\r\n\r\n            let reader = response.body.getReader();\r\n            let decoder = new TextDecoder();\r\n\r\n            // Create a bot message container with the appropriate style classes\r\n            let botMessageContainer = appendMessage('', 'bot');\r\n\r\n            // Append the bot message container to the chat area as it arrives\r\n            document.getElementById('chatArea').appendChild(botMessageContainer);\r\n\r\n            while (true) {\r\n                const { value, done } = await reader.read();\r\n                if (done) break;\r\n                let chunk = decoder.decode(value, { stream: true });\r\n\r\n                // Replace newline characters with HTML <br> tags\r\n                chunk = chunk.replace(/\\n/g, '<br>');\r\n\r\n                // Append the chunk to the chat area as it arrives\r\n                botMessageContainer.innerHTML += chunk;\r\n\r\n                // Scroll the chat area to the latest message\r\n                document.getElementById('chatArea').scrollTop = document.getElementById('chatArea').scrollHeight;\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            appendMessage(\"Sorry, I can't connect to the chat service right now.\", 'bot');\r\n        }\r\n\r\n        // After receiving the bot's response, enable the input field and predetermined questions buttons\r\n        document.getElementById('userInput').disabled = false;\r\n        document.querySelectorAll('.example-input').forEach(function (example) {\r\n            example.disabled = false;\r\n        });\r\n\r\n        isChatBotResponding = false; // Reset the flag\r\n    }\r\n\r\n    function appendMessage(text, sender) {\r\n        let messageContainer = document.createElement('div');\r\n        messageContainer.classList.add('message');\r\n\r\n        if (sender === 'user') {\r\n            messageContainer.classList.add('user-message');\r\n\r\n            messageContainer.innerHTML = \"User:<br>\" + text; // Use textContent for better security\r\n            document.getElementById('chatArea').appendChild(messageContainer);\r\n            messageContainer.scrollIntoView({ behavior: 'smooth' });\r\n        } else if (sender === 'bot') {\r\n            messageContainer.classList.add('bot-message');\r\n\r\n            messageContainer.innerHTML = \"Bot:\" + text;\r\n            // For bot messages, we need to change the alignment to the end/right\r\n            messageContainer.style.alignSelf = 'flex-end';\r\n            return messageContainer;\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n{% endblock %}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/templates/output.html b/app/templates/output.html
--- a/app/templates/output.html	(revision c9a9738d90255a8e7ddaa9e62eeaa28dd6d0b12c)
+++ b/app/templates/output.html	(date 1705063952726)
@@ -162,6 +162,45 @@
         {% endfor %}
     </div>
 
+    <!-- Expert Information Section (initially hidden) -->
+    <div id="expertInformation" style="background-color: #21252907; padding: 20px; border-radius: 5px; margin-top: 20px;">
+        <h2 class="mb-4" style="color: #333;">Expert Information</h2>
+
+        <!-- Similarity Matrix Card -->
+        <div class="card mb-4">
+            <div class="card-body" style="padding:3rem 3rem 1rem">
+                <h3 class="card-title" style="color: #333;">Similarity Matrix</h3>
+                <p class="card-text" style="color: #777;">
+                    The similarity matrix is a visual representation of how similar each course is to every other course in our dataset. It is a key component of our course recommendation system. Each cell in the matrix represents the similarity score between two courses. A higher similarity score indicates that the two courses share more similarities in various aspects, making them more related. This matrix helps us in identifying course recommendations by analyzing the relationships between courses.
+                </p>
+            </div>
+            <img src="{{ url_for('static', filename='images/similarity_matrix.png') }}" alt="Similarity Matrix" class="card-img-top img-thumbnail rounded mt-3">
+        </div>
+
+        <!-- Similarity Embedding Card -->
+        <div class="card mb-4">
+            <div class="card-body" style="padding:3rem 3rem 1rem">
+                <h3 class="card-title" style="color: #333;">Similarity Embedding</h3>
+                <p class="card-text" style="color: #777;">
+                    The similarity embedding is another important component of our course recommendation system. It is a one-dimensional representation of the similarity scores between courses. Essentially, it is a row where each similarity score is lined up against each other. The position of each score in the row corresponds to a specific course, allowing us to efficiently compare their similarities. Courses with similar scores in the embedding are more likely to be recommended based on user preferences, as they share common characteristics or attributes.
+                </p>
+            </div>
+            <img src="{{ url_for('static', filename='images/similarity_embedding.png') }}" alt="Similarity Embedding" class="card-img-top img-thumbnail rounded mt-3">
+        </div>
+
+        <!-- About Similarity Metrics Card -->
+        <div class="card">
+            <div class="card-body" style="padding:3rem 3rem">
+                <h3 class="card-title" style="color: #333;">About Similarity Metrics</h3>
+                <p class="card-text" style="color: #777;">
+                    The similarity matrix and similarity embedding are vital tools in our course recommendation system. They are employed to measure the similarity between different courses based on various factors such as content, prerequisites, and student reviews. These metrics are essential in helping us provide personalized course recommendations to our users. By utilizing these metrics, we can offer courses that align more closely with individual preferences and needs, enhancing the overall user experience.
+                </p>
+            </div>
+        </div>
+    </div>
+
+
+
     <div class="row justify-content-center mt-4">
         <div class="col-lg-6 text-center mb-4">
             <a class="btn btn-outline-secondary btn-lg" href="{{ url_for('survey') }}" role="button">Take the Survey</a>
@@ -226,6 +265,7 @@
     var isChatBotResponding = false;
 
     toggleChatFunctions();
+    toggleExpertInformation();
 
     document.querySelectorAll('.example-input').forEach(function (example) {
         example.addEventListener('click', function () {
@@ -237,6 +277,17 @@
         });
     });
 
+    function toggleExpertInformation() {
+        var expertInformation = document.getElementById('expertInformation');
+        var ceToggle = document.getElementById('ce-toggle');
+
+        if (ceToggle.checked) {
+            expertInformation.style.display = 'block'; // Show the 'Expert Information' section
+        } else {
+            expertInformation.style.display = 'none'; // Hide the 'Expert Information' section
+        }
+    }
+
     function toggleChatFunctions() {
         var chatInputSection = document.getElementById('chatInputSection');
         var predeterminedQuestionsSection = document.getElementById('predeterminedQuestionsSection');
Index: app/utils/matching.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import numpy as np\r\nfrom numpy.linalg import norm\r\n\r\nimport json\r\n\r\nimport pickle\r\nimport pandas as pd\r\nimport matplotlib.pyplot as plt\r\nimport seaborn as sns\r\n\r\neducations_path = \"input/educations.csv\"\r\nembeddings_path = \"input/embeddings_checkpoint_skills.pkl\"\r\n\r\ndf = pd.read_csv(educations_path)\r\nword_occurrence_matrix = pd.read_csv(\"input/word_matrix.csv\")\r\nwith open(embeddings_path, \"rb\") as file:\r\n    embeddings, _ = pickle.load(file)\r\n\r\n\r\ndef find_best_matches(input_embedding, input_text, n=5):\r\n    # Calculate cosine similarities (or any other similarity measure)\r\n    similarities = [\r\n        np.dot(input_embedding, emb) / (norm(input_embedding) * norm(emb))\r\n        for emb in embeddings\r\n    ]\r\n\r\n    # For each embedding index check if a word of the input text appears in word_occurrence_matrix\r\n    for i in range(len(similarities)):\r\n        for word in input_text.split():\r\n            if word.lower() in word_occurrence_matrix.columns:\r\n                if word_occurrence_matrix.iloc[i][word.lower()] > 0:\r\n                    similarities[i] *= 1.05 ** word_occurrence_matrix.iloc[i][word.lower()]\r\n\r\n    # Get the indexes of the top n matches\r\n    best_match_indexes = sorted(\r\n        range(len(similarities)), key=lambda i: similarities[i], reverse=True\r\n    )[:n]\r\n\r\n    # Get the best matches\r\n    best_matches = df.iloc[best_match_indexes]\r\n\r\n    # Add the similarity scores to the best matches, rounded to 2 decimals\r\n    best_matches[\"similarity\"] = [similarities[i] for i in best_match_indexes]\r\n\r\n    # rename columns\r\n    best_matches = best_matches.rename(\r\n        columns={\r\n            \"EducationTitle\": \"title\",\r\n            \"Description\": \"description\",\r\n            \"SkillsAcquired\": \"skills\",\r\n            \"Duration\": \"duration\",\r\n            \"Level\": \"level\",\r\n        }\r\n    )\r\n\r\n    return best_matches\r\n\r\n\r\ndef convert_df_to_json(df):\r\n    json_string = df.to_json(orient=\"records\")\r\n    return json.loads(json_string)\r\n\r\n\r\ndef compare_embeddings(embeddings):\r\n    n = len(embeddings)\r\n    similarity_matrix = np.zeros((n, n))\r\n\r\n    for i in range(n):\r\n        for j in range(i, n):\r\n            similarity = np.dot(embeddings[i], embeddings[j]) / (\r\n                norm(embeddings[i]) * norm(embeddings[j])\r\n            )\r\n            similarity_matrix[i][j] = similarity\r\n            similarity_matrix[j][i] = similarity  # The matrix is symmetric\r\n\r\n    return similarity_matrix\r\n\r\n\r\ndef compare_single_embedding_to_others(single_embedding, embeddings):\r\n    similarities = [\r\n        np.dot(single_embedding, emb) / (norm(single_embedding) * norm(emb))\r\n        for emb in embeddings\r\n    ]\r\n    return similarities\r\n\r\n\r\ndef visualize_similarity_matrix(matrix, title=\"Similarity Matrix\"):\r\n    plt.figure(figsize=(20, 16))\r\n    sns.heatmap(matrix, annot=False, cmap=\"coolwarm\", square=True)\r\n    plt.title(title)\r\n    plt.ylabel(\"Embedding Index\")\r\n    plt.xlabel(\"Embedding Index\")\r\n    plt.show()\r\n\r\n\r\ndef visualize_embedding_similarity(\r\n    similarities, title=\"Similarity to a Given Embedding\"\r\n):\r\n    plt.figure(figsize=(12, 6))\r\n    plt.bar(range(len(similarities)), similarities, color=\"blue\")\r\n    plt.xlabel(\"Embedding Index\")\r\n    plt.ylabel(\"Similarity\")\r\n    plt.title(title)\r\n    plt.show()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/utils/matching.py b/app/utils/matching.py
--- a/app/utils/matching.py	(revision c9a9738d90255a8e7ddaa9e62eeaa28dd6d0b12c)
+++ b/app/utils/matching.py	(date 1705063952732)
@@ -76,29 +76,35 @@
     return similarity_matrix
 
 
-def compare_single_embedding_to_others(single_embedding, embeddings):
-    similarities = [
-        np.dot(single_embedding, emb) / (norm(single_embedding) * norm(emb))
-        for emb in embeddings
-    ]
-    return similarities
+def generate_similarity_matrix():
+    n = len(embeddings)
+    similarity_matrix = np.zeros((n, n))
 
+    for i in range(n):
+        for j in range(i, n):
+            similarity = np.dot(embeddings[i], embeddings[j]) / (norm(embeddings[i]) * norm(embeddings[j]))
+            similarity_matrix[i][j] = similarity
+            similarity_matrix[j][i] = similarity
 
-def visualize_similarity_matrix(matrix, title="Similarity Matrix"):
     plt.figure(figsize=(20, 16))
-    sns.heatmap(matrix, annot=False, cmap="coolwarm", square=True)
-    plt.title(title)
+    sns.heatmap(similarity_matrix, annot=False, cmap="coolwarm", square=True)
     plt.ylabel("Embedding Index")
     plt.xlabel("Embedding Index")
-    plt.show()
+
+    # store the plot as a file
+    plt.savefig("app/static/images/similarity_matrix.png")
 
 
-def visualize_embedding_similarity(
-    similarities, title="Similarity to a Given Embedding"
+def generate_embedding_similarity(
+    embedding
 ):
+    similarities = [np.dot(embedding, emb) / (norm(embedding) * norm(emb)) for emb in embeddings]
+
     plt.figure(figsize=(12, 6))
     plt.bar(range(len(similarities)), similarities, color="blue")
     plt.xlabel("Embedding Index")
     plt.ylabel("Similarity")
-    plt.title(title)
-    plt.show()
+
+    # store the plot as a file
+    plt.savefig("app/static/images/similarity_embedding.png")
+
Index: app/templates/base.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <title>{% block title %}KU Leuven{% endblock %}</title>\r\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\" crossorigin=\"anonymous\">\r\n    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\" rel=\"stylesheet\">\r\n    <style>\r\n        #sidebar {\r\n            min-width: 250px;\r\n            max-width: 250px;\r\n            min-height: 100vh;\r\n            position: sticky; /* Make the sidebar sticky */\r\n            top: 0; /* Stick it to the top of the viewport */\r\n            height: 100%; /* Take full height of the viewport */\r\n        }\r\n        #sidebar .navbar-brand, #sidebar .nav-link {\r\n            width: 100%;\r\n            text-align: center;\r\n        }\r\n        #sidebar .navbar-brand {\r\n            font-size: 1.5em;\r\n            padding-top: 1rem;\r\n            padding-bottom: 1rem;\r\n        }\r\n        #top-links {\r\n            list-style-type: none;\r\n            padding: 0;\r\n            margin: 0;\r\n        }\r\n\r\n        #bottom-links {\r\n            list-style-type: none;\r\n            padding: 0;\r\n            margin: 0;\r\n            margin-top: auto; /* Pushes the bottom links to the bottom */\r\n        }\r\n\r\n        #bottom-links .nav-link {\r\n            margin-top: auto; /* Add spacing between bottom links if needed */\r\n        }\r\n\r\n        .toggle {\r\n            position: relative;\r\n            display: inline-block;\r\n            margin-bottom: 1rem;\r\n            width: 50px;\r\n            height: 26px;\r\n            background-color: hsl(0, 0%, 85%);\r\n            border-radius: 25px;\r\n            cursor: pointer;\r\n            transition: background-color 0.25s ease-in;\r\n        }\r\n        .toggle::after {\r\n            content: '';\r\n            position: absolute;\r\n            top: 2px;\r\n            left: 2px;\r\n            width: 22px;\r\n            height: 22px;\r\n            background-color: white;\r\n            border-radius: 50%;\r\n            transition: all 0.25s ease-out;\r\n        }\r\n        #cb-toggle:checked + .toggle {\r\n            background-color: hsl(102, 58%, 39%);\r\n        }\r\n        #cb-toggle:checked + .toggle::after {\r\n            transform: translateX(24px);\r\n        }\r\n        .hide-me {\r\n            opacity: 0;\r\n            height: 0;\r\n            width: 0;\r\n        }\r\n\r\n        .container-fluid {\r\n            background-color: #fff2cb;\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n    <div class=\"d-flex\">\r\n        <nav id=\"sidebar\" class=\"navbar navbar-dark bg-dark flex-column\">\r\n            <a class=\"navbar-brand\" href=\"{{ url_for('index_page') }}\">KU Leuven</a>\r\n            <ul id=\"top-links\" class=\"navbar-nav\">\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" href=\"{{ url_for('index_page') }}\">Home</a>\r\n                    <a class=\"nav-link\" href=\"{{ url_for('input_page') }}\">Get Started</a>\r\n                    <a class=\"nav-link\" href=\"{{ url_for('output_page') }}\">Predictions</a>\r\n                    <a class=\"nav-link\" href=\"{{ url_for('survey') }}\">Survey</a>\r\n\r\n                    <!-- Add more links as needed -->\r\n                </li>\r\n            </ul>\r\n            <ul id=\"bottom-links\" class=\"navbar-nav\">\r\n                <li class=\"nav-item d-flex justify-content-center align-items-center\">\r\n                    <div>\r\n                        <a class=\"nav-link text-center\">Toggle Chat Functions</a>\r\n                        <div class=\"d-flex justify-content-center align-items-center\">\r\n                            <input id=\"cb-toggle\" type=\"checkbox\" class=\"hide-me\" aria-labelledby=\"cb-label\" onchange=\"toggleChatFunctions()\">\r\n                            <label for=\"cb-toggle\" class=\"toggle\"></label>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n\r\n        <div id=\"content\" class=\"container-fluid\">\r\n            <main class=\"mx-5 px-5\">\r\n                {% block content %}{% endblock %}\r\n            </main>\r\n        </div>\r\n    </div>\r\n    <!-- Include Bootstrap JS and Popper.js (if needed) -->\r\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL\" crossorigin=\"anonymous\"></script>\r\n    <script>\r\n        var cb = document.querySelector('#cb-toggle');\r\n        cb.addEventListener('click', function() {\r\n            var stateSpan = document.querySelector('#toggle-state');\r\n            var currentState;\r\n            if (cb.checked) {\r\n                currentState = 'on';\r\n            } else {\r\n                currentState = 'off';\r\n            }\r\n            stateSpan.innerHTML = currentState;\r\n        }, false);\r\n    </script>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/templates/base.html b/app/templates/base.html
--- a/app/templates/base.html	(revision c9a9738d90255a8e7ddaa9e62eeaa28dd6d0b12c)
+++ b/app/templates/base.html	(date 1705063952738)
@@ -69,6 +69,12 @@
         #cb-toggle:checked + .toggle::after {
             transform: translateX(24px);
         }
+        #ce-toggle:checked + .toggle {
+            background-color: hsl(102, 58%, 39%);
+        }
+        #ce-toggle:checked + .toggle::after {
+            transform: translateX(24px);
+        }
         .hide-me {
             opacity: 0;
             height: 0;
@@ -76,7 +82,7 @@
         }
 
         .container-fluid {
-            background-color: #fff2cb;
+            background-color: #fff4d4;
         }
     </style>
 </head>
@@ -95,15 +101,27 @@
                 </li>
             </ul>
             <ul id="bottom-links" class="navbar-nav">
+                <!-- Toggle for Chat Functions -->
                 <li class="nav-item d-flex justify-content-center align-items-center">
                     <div>
-                        <a class="nav-link text-center">Toggle Chat Functions</a>
+                        <a class="nav-link text-center">Chat Mode</a>
                         <div class="d-flex justify-content-center align-items-center">
                             <input id="cb-toggle" type="checkbox" class="hide-me" aria-labelledby="cb-label" onchange="toggleChatFunctions()">
                             <label for="cb-toggle" class="toggle"></label>
                         </div>
                     </div>
                 </li>
+
+                <!-- Toggle for Expert Information -->
+                <li class="nav-item d-flex justify-content-center align-items-center">
+                    <div>
+                        <a id="ce-label" class="nav-link text-center">Expert Mode</a>
+                        <div class="d-flex justify-content-center align-items-center">
+                            <input id="ce-toggle" type="checkbox" class="hide-me" aria-labelledby="ce-label" onchange="toggleExpertInformation()">
+                            <label for="ce-toggle" class="toggle"></label>
+                        </div>
+                    </div>
+                </li>
             </ul>
         </nav>
 
@@ -117,8 +135,8 @@
     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
     <script>
         var cb = document.querySelector('#cb-toggle');
-        cb.addEventListener('click', function() {
-            var stateSpan = document.querySelector('#toggle-state');
+        cb.addEventListener('click', function () {
+            var stateSpan = document.querySelector('#cb-toggle'); // Update the ID here
             var currentState;
             if (cb.checked) {
                 currentState = 'on';
@@ -127,6 +145,18 @@
             }
             stateSpan.innerHTML = currentState;
         }, false);
+
+        var ce = document.querySelector('#ce-toggle');
+        ce.addEventListener('click', function () {
+            var stateSpan = document.querySelector('#ce-toggle');
+            var currentState;
+            if (ce.checked) {
+                currentState = 'on';
+            } else {
+                currentState = 'off';
+            }
+            stateSpan.innerHTML = currentState;
+        }, false);
     </script>
 </body>
 </html>
Index: app/routes.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from flask import (\r\n    render_template,\r\n    request,\r\n    stream_with_context,\r\n    Response,\r\n    send_file,\r\n    session,\r\n    jsonify,\r\n)\r\nfrom app import app\r\nfrom app.utils import models as model_utils\r\nfrom app.utils import matching as matching_utils\r\n\r\n\r\nmodel_path = \"https://huggingface.co/TheBloke/dolphin-2.6-mistral-7B-dpo-laser-GGUF/resolve/main/dolphin-2.6-mistral-7b-dpo-laser.Q4_K_M.gguf\"\r\nfilename = \"input/dolphin-2.6-mistral-7b-dpo-laser.Q4_K_M.gguf\"\r\nglobal current_model\r\nglobal embedder\r\n\r\n\r\ndef load_model():\r\n    # Unload the current model if it exists\r\n    global current_model\r\n\r\n    current_model = model_utils.get_model(model_path, filename)\r\n\r\n    return current_model\r\n\r\n\r\n@app.route(\"/\")\r\ndef index_page():\r\n    return render_template(\"index.html\")\r\n\r\n\r\n@app.route(\"/input_page\")\r\ndef input_page():\r\n    load_model()\r\n    return render_template(\"input.html\")\r\n\r\n\r\n@app.route(\"/loading_page\", methods=[\"POST\"])\r\ndef loading_page():\r\n    # Save the user input in the session\r\n    session[\"user_input\"] = request.form.get(\"input_text\")\r\n    return render_template(\"loading.html\")\r\n\r\n\r\n@app.route(\"/process_input\", methods=[\"POST\"])\r\ndef process_input():\r\n    user_input = session.get(\"user_input\", \"\")\r\n\r\n    # Embed the input and find the best matches\r\n    embedded_output = model_utils.embed_specific_query(user_input, filename)\r\n    best_matches = matching_utils.find_best_matches(embedded_output, user_input, 9)\r\n\r\n    # Convert the best matches to JSON objects and Store the results in the session\r\n    session[\"courses\"] = matching_utils.convert_df_to_json(best_matches)\r\n    return jsonify({\"success\": True, \"courses\": session[\"courses\"]})\r\n\r\n\r\n@app.route(\"/output_page\", methods=[\"GET\"])\r\ndef output_page():\r\n    # Get the predicted courses from the session\r\n    predicted_courses = session.get(\"courses\", [])\r\n    return render_template(\r\n        \"output.html\", courses=predicted_courses, user_input=session.get(\"user_input\", \"\")\r\n    )\r\n\r\n\r\n@app.route(\"/output\")\r\ndef output():\r\n    return render_template(\"output.html\")\r\n\r\n\r\n@app.route(\"/survey\")\r\ndef survey():\r\n    return render_template(\"survey.html\")\r\n\r\n\r\n@app.route(\"/download\")\r\ndef download_file():\r\n    # Path to the file you want to serve\r\n    file_path = \"static/resources/informatiebrief.pdf\"\r\n    return send_file(file_path, as_attachment=True)\r\n\r\n\r\n@app.route(\"/chat\", methods=[\"POST\"])\r\ndef chat():\r\n    user_input = request.json.get(\"message\")\r\n    processed_input = model_utils.generate_chat_prompt(user_input)\r\n    streamer = model_utils.get_llm_generator(processed_input, current_model)\r\n\r\n    buffer = []\r\n    buffer_size = 3\r\n\r\n    def generate():\r\n        for word in streamer:\r\n            buffer.append(word[\"choices\"][0][\"text\"])\r\n            if len(buffer) >= buffer_size:\r\n                yield \"\".join(buffer)\r\n                buffer.clear()\r\n        if buffer:\r\n            yield \" \".join(buffer)\r\n\r\n    return Response(stream_with_context(generate()))\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/routes.py b/app/routes.py
--- a/app/routes.py	(revision c9a9738d90255a8e7ddaa9e62eeaa28dd6d0b12c)
+++ b/app/routes.py	(date 1705063952744)
@@ -55,6 +55,11 @@
 
     # Convert the best matches to JSON objects and Store the results in the session
     session["courses"] = matching_utils.convert_df_to_json(best_matches)
+
+    # Generate similarity matrix and embedding comparison
+    matching_utils.generate_similarity_matrix()
+    matching_utils.generate_embedding_similarity(embedded_output)
+
     return jsonify({"success": True, "courses": session["courses"]})
 
 
Index: app/templates/loading.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends 'base.html' %}\r\n\r\n{% block content %}\r\n<style>\r\n    #loading-dots {\r\n        display: inline-block;\r\n        width: 30px; /* Adjust the width as needed */\r\n        text-align: left;\r\n    }\r\n\r\n    .container-fluid {\r\n            background-color: #ffffff;\r\n    }\r\n\r\n    .content-background {\r\n        background: url('{{ url_for('static', filename='images/learning_person.gif') }}') no-repeat center bottom;\r\n        background-size: 55%;\r\n    }\r\n\r\n    .content-container {\r\n        min-height: calc(100vh - 3rem);; /* Full height */\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .loading-section {\r\n        margin: auto auto; /* Centering the section */\r\n        height: 15rem; /* Fixed height to accommodate progress bar and button */\r\n    }\r\n\r\n    .spinner {\r\n        margin: 2rem auto; /* Centers the spinner */\r\n    }\r\n\r\n    .btn-results {\r\n        font-size: 1.5rem; /* Larger text for the button */\r\n        padding: 0.75rem 1.5rem; /* Bigger button */\r\n        border-radius: 2rem; /* Rounded borders for the button */\r\n        margin: 2rem auto; /* Centers the progress bar */\r\n        display: none; /* Initially hide the button */\r\n    }\r\n</style>\r\n\r\n<div class=\"container mt-5 content-background content-container\">\r\n    <div class=\"loading-section\">\r\n        <h2 id=\"loading-message\" class=\"text-center\">\r\n            Preparing your personalized course recommendations<span id=\"loading-dots\"></span>\r\n        </h2>\r\n        <button id=\"resultsButton\" class=\"btn btn-success btn-lg btn-results\" onclick=\"window.location.href = '{{ url_for('output_page') }}';\">\r\n            Go to Results Page\r\n        </button>\r\n    </div>\r\n</div>\r\n\r\n<script>\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n        const loadingMessage = document.getElementById('loading-message');\r\n        const resultsButton = document.getElementById('resultsButton');\r\n\r\n        fetch('/process_input', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                console.log(\"Processing completed\", data.courses);\r\n                loadingMessage.innerText = \"Your personalized course recommendations are ready!\";\r\n                resultsButton.style.display = 'block'; // Show the results button\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error: Unable to process input\", error);\r\n            loadingMessage.innerText = \"An error occurred while processing your input. Please try again later.\";\r\n        });\r\n    });\r\n\r\n    const loadingDots = document.getElementById('loading-dots');\r\n    let dotCount = 0;\r\n\r\n    const updateDots = () => {\r\n        let dots = '.'.repeat(dotCount % 4);\r\n        loadingDots.textContent = dots;\r\n        dotCount++;\r\n    };\r\n\r\n    setInterval(updateDots, 500);\r\n</script>\r\n\r\n{% endblock %}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/templates/loading.html b/app/templates/loading.html
--- a/app/templates/loading.html	(revision c9a9738d90255a8e7ddaa9e62eeaa28dd6d0b12c)
+++ b/app/templates/loading.html	(date 1705063952766)
@@ -14,7 +14,7 @@
 
     .content-background {
         background: url('{{ url_for('static', filename='images/learning_person.gif') }}') no-repeat center bottom;
-        background-size: 55%;
+        background-size: 45%;
     }
 
     .content-container {
Index: test.ipynb
===================================================================
diff --git a/test.ipynb b/test.ipynb
deleted file mode 100644
--- a/test.ipynb	(revision c9a9738d90255a8e7ddaa9e62eeaa28dd6d0b12c)
+++ /dev/null	(revision c9a9738d90255a8e7ddaa9e62eeaa28dd6d0b12c)
@@ -1,1 +0,0 @@
-{"cells":[{"cell_type":"code","execution_count":1,"metadata":{},"outputs":[{"name":"stdout","output_type":"stream","text":["File downloaded successfully.\n"]}],"source":["import os\n","import urllib.request\n","\n","\n","def download_file(file_link, filename):\n","    # Checks if the file already exists before downloading\n","    if not os.path.isfile(filename):\n","        urllib.request.urlretrieve(file_link, filename)\n","        print(\"File downloaded successfully.\")\n","    else:\n","        print(\"File already exists.\")\n","\n","# Dowloading GGML model from HuggingFace\n","ggml_model_path = \"https://huggingface.co/TheBloke/dolphin-2.6-mistral-7B-dpo-laser-GGUF/resolve/main/dolphin-2.6-mistral-7b-dpo-laser.Q4_K_M.gguf\"\n","filename = \"input/dolphin-2.6-mistral-7b-dpo-laser.Q4_K_M.gguf\"\n","\n","download_file(ggml_model_path, filename)"]},{"cell_type":"code","execution_count":2,"metadata":{},"outputs":[{"name":"stderr","output_type":"stream","text":["AVX = 1 | AVX2 = 1 | AVX512 = 0 | AVX512_VBMI = 0 | AVX512_VNNI = 0 | FMA = 1 | NEON = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 0 | VSX = 0 | \n"]}],"source":["from llama_cpp import Llama\n","\n","llm = Llama(model_path=filename, n_ctx=512, n_batch=126)"]},{"cell_type":"code","execution_count":3,"metadata":{},"outputs":[],"source":["def get_llm_generator(\n","    prompt,\n","    max_tokens=512,\n","    temperature=0,\n","    top_p=0.9,\n","    echo=False,\n","    stop=[\"[INST]\"],\n","):\n","    text_generator = llm(\n","        prompt,\n","        max_tokens=max_tokens,\n","        temperature=temperature,\n","        top_p=top_p,\n","        echo=echo,\n","        stream=True,\n","        stop=stop,\n","    )\n","    return text_generator\n","\n","def get_llm_generation(\n","    prompt,\n","    max_tokens=512,\n","    temperature=0,\n","    top_p=0.9,\n","    echo=False,\n","    stop=[\"[INST]\"],\n","):\n","    text_generation = llm(\n","        prompt,\n","        max_tokens=max_tokens,\n","        temperature=temperature,\n","        top_p=top_p,\n","        echo=echo,\n","        stop=stop,\n","    )\n","    return text_generation[\"choices\"][0][\"text\"].strip()\n","\n","def generate_chat_prompt(prompt):\n","    system_message = (\n","        \"You are a helpful bot that answers any questions the user may have. Only answer in short clear \"\n","        \"sentences.\"\n","    )\n","    chat_prompt_template = f\"\"\"<|im_start|>system\n","    {system_message}<|im_end|>\n","    <|im_start|>user\n","    {prompt}<|im_end|>\n","    <|im_start|>assistant\"\"\"\n","    return chat_prompt_template\n","\n","def generate_skill_extraction_prompt(input):\n","    system = \"You are a helpful bot that extracts a couple of skills the user will learn after learning what the user wants to learn. Only answer in a list of comma separated words in between curly brackets.\"\n","    chat_prompt_template = f\"<s>[INST] {system} [/INST]</s>{input}\"\n","    return chat_prompt_template\n","\n","def process_skill_extraction_prompt(input, prompt):\n","    if \"{\" in input and \"}\" in input:\n","        return input[input.find(\"{\")+1:input.find(\"}\")]\n","    else:\n","        return prompt"]},{"cell_type":"code","execution_count":7,"metadata":{},"outputs":[{"name":"stderr","output_type":"stream","text":["Llama.generate: prefix-match hit\n"]},{"name":"stdout","output_type":"stream","text":["  1 . Read books and articles on AI\n",".  2 . Take online courses or attend workshops\n",".  3 . Join AI communities and for ums\n",".  4 . Att end con ferences and sem\n","in ars .  5 . Learn programming languages used\n"]}],"source":["# Test User Help Generator\n","prompt = generate_chat_prompt(\n","    \"How can I learn more about AI?\"\n",")\n","\n","generator = get_llm_generator(prompt)\n","\n","buffer = []\n","buffer_size = 10\n","\n","for word in generator:\n","    buffer.append(word[\"choices\"][0][\"text\"].strip())\n","    if len(buffer) >= buffer_size:\n","        print(\" \".join(buffer))\n","        buffer.clear()"]},{"cell_type":"code","execution_count":105,"metadata":{},"outputs":[{"name":"stderr","output_type":"stream","text":["Llama.generate: prefix-match hit\n"]},{"data":{"text/plain":["'English, Spanish, French, German, Italian, Portuguese, Russian, Chinese, Japanese, Korean'"]},"execution_count":105,"metadata":{},"output_type":"execute_result"}],"source":["# Test Skill Extraction\n","prompt = \"I want to learn the most important languages in the world.\"\n","processed_prompt = generate_skill_extraction_prompt(\n","    prompt\n",")\n","output = get_llm_generation(processed_prompt)\n","processed_output = process_skill_extraction_prompt(output, prompt)\n","processed_output"]},{"cell_type":"code","execution_count":115,"metadata":{},"outputs":[{"name":"stdout","output_type":"stream","text":["Collecting scikit-learn\n","  Downloading scikit_learn-1.3.2-cp310-cp310-win_amd64.whl.metadata (11 kB)\n","Requirement already satisfied: numpy<2.0,>=1.17.3 in c:\\users\\skovda93\\appdata\\local\\anaconda3\\envs\\hmi\\lib\\site-packages (from scikit-learn) (1.26.2)\n","Requirement already satisfied: scipy>=1.5.0 in c:\\users\\skovda93\\appdata\\local\\anaconda3\\envs\\hmi\\lib\\site-packages (from scikit-learn) (1.11.4)\n","Requirement already satisfied: joblib>=1.1.1 in c:\\users\\skovda93\\appdata\\roaming\\python\\python310\\site-packages (from scikit-learn) (1.3.2)\n","Collecting threadpoolctl>=2.0.0 (from scikit-learn)\n","  Downloading threadpoolctl-3.2.0-py3-none-any.whl.metadata (10.0 kB)\n","Downloading scikit_learn-1.3.2-cp310-cp310-win_amd64.whl (9.3 MB)\n","   ---------------------------------------- 0.0/9.3 MB ? eta -:--:--\n","   - -------------------------------------- 0.4/9.3 MB 7.4 MB/s eta 0:00:02\n","   ----- ---------------------------------- 1.2/9.3 MB 12.7 MB/s eta 0:00:01\n","   ---------- ----------------------------- 2.5/9.3 MB 17.9 MB/s eta 0:00:01\n","   ---------------- ----------------------- 3.8/9.3 MB 20.1 MB/s eta 0:00:01\n","   ---------------- ----------------------- 3.9/9.3 MB 15.7 MB/s eta 0:00:01\n","   ---------------------------- ----------- 6.6/9.3 MB 20.9 MB/s eta 0:00:01\n","   -------------------------------------- - 8.8/9.3 MB 23.5 MB/s eta 0:00:01\n","   ---------------------------------------  9.2/9.3 MB 23.6 MB/s eta 0:00:01\n","   ---------------------------------------- 9.3/9.3 MB 21.1 MB/s eta 0:00:00\n","Downloading threadpoolctl-3.2.0-py3-none-any.whl (15 kB)\n","Installing collected packages: threadpoolctl, scikit-learn\n","Successfully installed scikit-learn-1.3.2 threadpoolctl-3.2.0\n"]}],"source":["!pip install scikit-learn"]},{"cell_type":"code","execution_count":1,"metadata":{},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>EducationTitle</th>\n","      <th>Description</th>\n","      <th>Duration</th>\n","      <th>SkillsAcquired</th>\n","      <th>Level</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Spanish Language Essentials</td>\n","      <td>Immerse yourself in the basics of Spanish lang...</td>\n","      <td>6 weeks</td>\n","      <td>Spanish Vocabulary;Grammar;Conversational Skills</td>\n","      <td>Beginner</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Photography Fundamentals</td>\n","      <td>Learn the art of photography, including camera...</td>\n","      <td>8 weeks</td>\n","      <td>Camera Settings;Composition;Photo Editing</td>\n","      <td>Intermediate</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Healthy Cooking for Beginners</td>\n","      <td>Discover the fundamentals of healthy cooking, ...</td>\n","      <td>10 weeks</td>\n","      <td>Meal Planning;Nutrition Basics;Cooking Skills</td>\n","      <td>Beginner</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Introduction to Astronomy</td>\n","      <td>Explore the wonders of the universe, covering ...</td>\n","      <td>12 weeks</td>\n","      <td>Astronomy Basics;Stargazing Techniques;Celesti...</td>\n","      <td>Beginner</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Introduction to Sustainable Living</td>\n","      <td>Gain insights into sustainable practices, incl...</td>\n","      <td>8 weeks</td>\n","      <td>Sustainable Living Practices;Environmental Awa...</td>\n","      <td>Beginner</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                       EducationTitle  \\\n","0         Spanish Language Essentials   \n","1            Photography Fundamentals   \n","2       Healthy Cooking for Beginners   \n","3           Introduction to Astronomy   \n","4  Introduction to Sustainable Living   \n","\n","                                         Description  Duration  \\\n","0  Immerse yourself in the basics of Spanish lang...   6 weeks   \n","1  Learn the art of photography, including camera...   8 weeks   \n","2  Discover the fundamentals of healthy cooking, ...  10 weeks   \n","3  Explore the wonders of the universe, covering ...  12 weeks   \n","4  Gain insights into sustainable practices, incl...   8 weeks   \n","\n","                                      SkillsAcquired         Level  \n","0   Spanish Vocabulary;Grammar;Conversational Skills      Beginner  \n","1          Camera Settings;Composition;Photo Editing  Intermediate  \n","2      Meal Planning;Nutrition Basics;Cooking Skills      Beginner  \n","3  Astronomy Basics;Stargazing Techniques;Celesti...      Beginner  \n","4  Sustainable Living Practices;Environmental Awa...      Beginner  "]},"execution_count":1,"metadata":{},"output_type":"execute_result"}],"source":["from sklearn.feature_extraction.text import CountVectorizer\n","import pandas as pd\n","\n","data = pd.read_csv(\"input/educations.csv\")\n","data.head()"]},{"cell_type":"code","execution_count":21,"metadata":{},"outputs":[],"source":["# Create an word occurance matrix for each row in the dataset\n","# each row in the matrix corresponds to a row in the dictionary and each column corresponds to a word in the dictionary\n","# the value of each cell is the number of times the word appears in the sentence\n","from sklearn.feature_extraction.text import CountVectorizer\n","import pandas as pd\n","from nltk.corpus import stopwords\n","\n","stop_words = set(stopwords.words(\"english\"))\n","\n","def get_word_occurrence_matrix(data):\n","    vectorizer = CountVectorizer()\n","    X = vectorizer.fit_transform(data)\n","    df = pd.DataFrame(X.toarray(), columns=vectorizer.get_feature_names_out())\n","    return df\n","\n","def filter_out_stopwords(query):\n","    filtered_list = []\n","    for w in query.split():\n","        if w.lower() not in stop_words:\n","            filtered_list.append(w.lower())\n","    filtered_query = \" \".join(filtered_list)\n","    return filtered_query"]},{"cell_type":"code","execution_count":22,"metadata":{},"outputs":[{"name":"stdout","output_type":"stream","text":["introduction astronomy\n"]},{"data":{"text/plain":["'introduction astronomy'"]},"execution_count":22,"metadata":{},"output_type":"execute_result"}],"source":["filter_out_stopwords(\"Introduction to Astronomy\")"]},{"cell_type":"code","execution_count":23,"metadata":{},"outputs":[{"name":"stdout","output_type":"stream","text":["spanish language essentials; spanish vocabulary;grammar;conversational skills\n","photography fundamentals; camera settings;composition;photo editing\n","healthy cooking beginners; meal planning;nutrition basics;cooking skills\n","introduction astronomy; astronomy basics;stargazing techniques;celestial navigation\n","introduction sustainable living; sustainable living practices;environmental awareness;green energy\n","graphic design essentials adobe creative cloud; graphic design principles;adobe creative cloud;design software\n","mindfulness meditation stress relief; mindfulness meditation techniques;stress management;relaxation skills\n","diy home gardening; plant care techniques;garden design;home vegetable cultivation\n","financial literacy young adults; personal budgeting;investment basics;credit management\n","introduction programming scratch; programming logic;scratch coding;algorithmic thinking\n","creative writing workshop; creative writing techniques;storytelling;genre exploration\n","fitness strength training; strength training techniques;personalized fitness planning;nutrition fitness\n","introduction python programming; python programming fundamentals\n","data science fundamentals; data analysis;statistics;data visualization\n","web development bootcamp; html;css;javascript;web development\n","machine learning beginners; machine learning basics;data preprocessing;model evaluation\n","digital marketing essentials; digital marketing strategy;social media marketing;seo\n","mobile app development react native; react native;mobile app development;ui/ux design\n","blockchain basics; blockchain fundamentals;cryptocurrency;smart contracts\n","artificial intelligence ethics; ai ethics;responsible ai;bias detection\n","cybersecurity fundamentals; network security;cryptographic techniques;ethical hacking\n","advanced data analysis python; advanced python libraries;data wrangling;time series analysis\n","introduction cloud computing; cloud computing basics;cloud deployment models;cloud security\n","introduction ux design; ux design principles;user research;prototyping\n","introduction data visualization; data visualization basics;data storytelling;dashboard design\n","introduction data science; data analysis;statistics;machine learning\n","introduction web development; html;css;javascript;web development\n","introduction artificial intelligence; machine learning;deep learning;neural networks\n","introduction cybersecurity; cryptography;network security;ethical hacking\n","introduction digital marketing; digital marketing strategy;social media marketing;seo\n","introduction mobile app development; react native;mobile app development;ui/ux design\n","introduction blockchain; blockchain fundamentals;cryptocurrency;smart contracts\n","introduction data analytics; data analysis;data visualization;data storytelling\n","introduction programming; programming fundamentals\n","introduction cloud computing; cloud computing basics;cloud deployment models;cloud security\n","introduction ux design; ux design principles;user research;prototyping\n","introduction data visualization; data visualization basics;data storytelling;dashboard design\n","introduction data science; data analysis;statistics;machine learning\n","introduction psychology; psychological theories;behavioral analysis;cognitive psychology\n","diy home repairs maintenance; home repair techniques;plumbing basics;electrical maintenance\n","digital illustration procreate; digital illustration techniques;procreate software;artistic design\n","introduction robotics; robotics fundamentals;programming robots;robotics system design\n","learn play guitar; guitar chords;strumming techniques;music theory\n","introduction cryptocurrency; cryptocurrency fundamentals;blockchain technology;crypto investment basics\n","effective time management; time management strategies;goal setting;productivity techniques\n","introduction wildlife photography; wildlife photography techniques;animal behavior observation;post-processing skills\n","learn dance: salsa; salsa dance basics;partnerwork techniques;dance styling\n","introduction cybersecurity; network security basics;cryptography;ethical hacking fundamentals\n","home yoga practice beginners; yoga poses beginners;meditation techniques;breathing exercises\n","introduction astrophotography; astrophotography equipment;shooting techniques;post-processing astrophotography\n","basics interior design; interior design principles;color theory;space planning\n","introduction organic chemistry; organic chemistry basics;molecular structures;chemical reactions\n","mobile app design sketch; mobile ui/ux design;prototyping sketch;app design principles\n","digital marketing analytics; digital marketing analytics;google analytics;data-driven decision making\n","introduction 3d printing; 3d printing basics;3d modeling;printer operation\n","healthy sleep habits; sleep hygiene;importance sleep;healthy sleep habits\n","basics cognitive neuroscience; cognitive neuroscience basics;brain functions;neural basis behavior\n","introduction user experience (ux) design; ux design principles;user research;wireframing\n","introduction cryptography; cryptography fundamentals;encryption techniques;cryptographic protocols\n","learn play chess; chess rules;strategy formulation;advanced chess tactics\n","introduction cognitive behavioral therapy (cbt); cbt fundamentals;cognitive restructuring;behavior analysis\n","introduction sustainable fashion; sustainable fashion principles;eco-friendly materials;slow fashion practices\n","digital storytelling adobe premiere pro; digital storytelling;video editing premiere pro;cinematic effects\n","introduction artificial intelligence beginners; artificial intelligence basics;machine learning applications\n","introduction american sign language (asl); asl vocabulary;sign language grammar;conversational asl\n","diy home energy efficiency; energy-efficient home practices;insulation techniques;sustainable energy\n","introduction cryptocurrencies trading; cryptocurrency trading strategies;blockchain technology;market analysis\n","introduction mind mapping; mind mapping techniques;creative problem solving;information organization\n","introduction meditation mindfulness; meditation techniques;mindfulness practices;stress reduction\n","introduction quantum physics; quantum physics basics;quantum mechanics;wave-particle duality\n","introduction indoor gardening; indoor plant care;container gardening;herb cultivation\n","introduction mobile game development unity; mobile game design;unity game development;game optimization\n","introduction meditation sleep; meditation sleep;relaxation techniques;sleep improvement\n","introduction quantum computing; quantum computing basics;qubits;quantum gates\n","introduction renewable energy; renewable energy basics;solar power systems;wind energy\n","introduction japanese cuisine; japanese cuisine basics;sushi making;ramen preparation\n","introduction personality psychology; personality psychology theories;personality assessments;personality traits\n","introduction data visualization tableau; data visualization techniques;tableau software;interactive dashboards\n","introduction dog training; dog obedience training;behavior modification;positive reinforcement\n","introduction environmental science; environmental science fundamentals;ecosystem analysis;conservation practices\n","introduction astrophysics; astrophysics fundamentals;celestial mechanics;cosmology\n","introduction mobile photography; mobile photography techniques;photo editing apps;composition principles\n","introduction classical music appreciation; classical music history;composers' works;music appreciation\n","introduction ios app development swift; ios app design;swift programming;app deployment\n","introduction yoga flexibility; yoga poses flexibility;stretching techniques;body mobility\n","introduction cybersecurity small businesses; cybersecurity small businesses;data protection;network security\n","introduction floral arrangement; flower selection;floral design principles;floral styling techniques\n","japanese language beginners; japanese language basics;hiragana;everyday conversation\n","creative digital marketing strategies; content creation;social media marketing;data-driven marketing\n","introduction interior design; space planning;color theory;interior design basics\n","introduction quantum computing; quantum computing fundamentals;quantum gates;quantum algorithms\n","artificial intelligence business; predictive analytics;natural language processing;machine learning business\n","creative smartphone photography; smartphone photography techniques;mobile editing apps;composition mobile photography\n","introduction sustainable fashion; ethical fashion practices;eco-friendly materials;conscious consumerism\n","financial planning retirement; retirement investment strategies;retirement accounts;post-retirement income planning\n","learn play chess; chess rules;chess strategies;tactical maneuvers\n","introduction 3d printing; 3d modeling;printer operation;practical applications 3d printing\n","effective communication workplace; workplace collaboration skills;conflict resolution;professional etiquette\n","introduction renewable energy; solar power basics;wind energy;sustainable energy solutions;beginner\n","basic carpentry skills; woodworking techniques;tool usage;basic carpentry projects\n","introduction graphic novels; graphic novel storytelling;character design;creative process graphic novel creation\n","introduction game development unity; game design principles;unity basics;building simple games\n","healthy skin care habits; skincare basics;product selection;skin wellness practices\n","introduction sustainable architecture; eco-friendly building materials;green design principles;energy-efficient practices\n","introduction astronomy kids; space exploration basics;basic celestial observations;solar system knowledge\n","introduction cryptography; encryption techniques;cryptographic protocols;applications cryptography\n","digital storytelling social impact; multimedia storytelling;advocacy strategies;digital content creation social impact\n","introduction mindful parenting; stress reduction parents;positive communication children;fostering emotional intelligence children\n","introduction bioinformatics; dna sequencing;computational biology;bioinformatics tools\n","learn play piano; piano basics;music theory;playing simple melodies\n","introduction quantum physics; quantum mechanics;wave-particle duality;quantum entanglement\n","introduction herbal medicine; medicinal plants;herbal remedies;herbal medicine preparation\n","introduction augmented reality development; ar concepts;ar frameworks;building simple ar applications\n","introduction meditation mindfulness; meditation techniques;mindfulness exercises;stress reduction practices\n","introduction ux/ui design; design thinking;wireframing;prototyping\n","introduction geocaching; geocaching basics;gps navigation;treasure hunting strategies\n","introduction robotics kids; basic robotics concepts;programming robots;hands-on robot building\n","introduction sustainable agriculture; organic farming;permaculture;agroecology\n","introduction digital painting; digital brushes;color theory;digital art creation\n","introduction human rights; international law;advocacy strategies;human rights protection\n","learn dance: hip hop; hip hop dance basics;choreography;creative expression dance\n","introduction ballroom dancing; ballroom dance basics;partner dance etiquette;dance techniques\n","introduction quantum chemistry; quantum chemistry principles;molecular orbitals;chemical bonding\n","diy home decor upcycling; upcycled diy crafting;repurposing materials;creative home design\n","introduction culinary arts; culinary techniques;flavor pairing;art plating\n","learn play ukulele; ukulele chords;strumming patterns;playing simple melodies\n","introduction social psychology; social influence;group dynamics;interpersonal relationships\n","introduction mobile game development; mobile game design principles;unity basics;building simple mobile games\n","diy natural skincare workshop; natural skincare ingredients;formulations diy skincare products;diy skincare product creation\n","introduction data visualization d3.js; d3.js data binding;svg graphics;interactive data visualizations\n","introduction classical guitar; classical guitar fingerstyle;classical repertoire;music theory guitarists\n","introduction environmental economics; environmental sustainability economics;cost-benefit analysis;environmental policy\n","introduction mobile photography editing; mobile editing apps;color correction;photo retouching techniques\n","introduction machine learning interpretability; feature importance ml;model visualization;interpretability tools\n","introduction diy electronics projects; diy electronics circuit design;soldering techniques;hands-on electronics construction\n","introduction ethical hacking; ethical hacking principles;penetration testing;network security\n","introduction watercolor painting techniques; advanced watercolor techniques;wet-on-wet painting;dry brush techniques\n","introduction astrophysics cosmology; dark matter astrophysics;dark energy;universe evolution\n","introduction fashion styling; wardrobe curation;trend analysis;editorial styling techniques\n","introduction software product management; agile product management;product roadmaps;user stories\n","introduction diy woodworking projects; diy furniture making;wood joinery techniques;finishing wood projects\n","introduction human-centered design; human-centered design principles;user research;prototyping;usability testing\n","introduction bioinformatics analysis; bioinformatics sequence alignment;genomics analysis;computational biology\n","introduction creative writing styles; creative fiction writing;poetry writing;non-fiction writing\n","introduction diy solar energy; diy solar panel installation;solar-powered gadgets;off-grid solutions\n","introduction industrial design; industrial design ideation;3d modeling;prototyping\n","introduction behavioral psychology; behavior analysis;learning theories;cognitive behavioral therapy\n","introduction diy screen printing; diy screen preparation;printing techniques;screen printing projects\n","introduction geographical information systems (gis); spatial analysis gis;map design;geographic data visualization\n","introduction sustainable energy policy; sustainable energy government initiatives;renewable energy laws;global energy policies\n","introduction diy home automation; diy iot devices;smart home integration;home automation solutions\n","introduction jazz dance; jazz dance technique;improvisation;choreography\n","introduction cognitive linguistics; language processing;cognitive semantics;linguistic relativity\n","introduction diy natural cleaning products; natural cleaning ingredients;formulations diy cleaning products;diy cleaning product recipes\n","introduction machine learning image recognition; cnns image recognition;image classification;deep learning image recognition\n","introduction diy sustainable gardening; organic gardening practices;permaculture;eco-friendly garden design\n","introduction french cuisine; classic french recipes;culinary techniques;french culinary traditions\n","introduction machine learning natural language processing; text classification;sentiment analysis;language generation nlp\n","introduction diy home renovation; home improvement techniques;remodeling;budget-friendly renovations\n","introduction social media marketing strategies; social media content planning;influencer collaboration;social media analytics\n","introduction diy natural beauty products; natural beauty product ingredients;formulations diy beauty products;diy beauty product creation techniques\n","introduction microbiology; microbial biology;laboratory techniques microbiology;role microorganisms health disease\n","introduction human-computer interaction; usability principles;user interface design;user experience\n","introduction diy natural soap making; soap making techniques;natural soap ingredients;diy soap recipes\n","introduction sustainable fashion design; eco-friendly materials fashion design;ethical production;sustainable fashion trends\n","introduction renewable energy policy; government initiatives renewable energy;environmental policies;sustainable energy laws\n","introduction diy electronics; circuit design;soldering;building simple electronic projects\n","introduction behavioral economics; decision-making processes;cognitive biases;economic psychology behavioral economics\n","introduction storyboarding animation; visual storytelling animation;character design;scene composition animation\n","introduction urban sketching; sketching techniques;perspective drawing;capturing urban scenes\n","introduction renewable energy economics; cost-benefit analysis renewable energy;market trends renewable energy;financing renewable energy projects\n","introduction diy woodworking; woodworking tool usage;joinery techniques;building simple woodworking projects\n","introduction artificial intelligence healthcare; medical image analysis using ai;predictive diagnostics ai;personalized medicine using ai\n","introduction diy natural beauty products; natural beauty product ingredients;formulations diy beauty products;diy beauty product creation techniques\n","introduction microbiology; microbial biology;laboratory techniques microbiology;role microorganisms health disease\n","introduction creative writing styles; creative fiction writing;poetry writing;non-fiction writing\n","introduction contemporary dance; contemporary dance basics;expressive movement;improvisation;choreography\n","introduction data science python; python data science;data analysis techniques;data visualization;machine learning basics\n","introduction landscape painting; landscape painting techniques;composition;color theory;nature scene capture\n","introduction game design unreal engine; unreal engine basics;level design;game mechanics;interactive storytelling\n","introduction culinary arts; knife skills;cooking techniques;flavor combinations;culinary fundamentals\n","learn play violin; violin basics;playing techniques;music theory;melody performance\n","introduction quantum computing; quantum computing basics;quantum gates;quantum algorithms;quantum information\n","introduction street photography; street photography techniques;candid shots;composition;storytelling\n","introduction financial planning; personal budgeting;investment strategies;retirement planning;financial literacy\n","introduction 3d animation blender; blender basics;3d modeling;texturing;animation principles\n","introduction mind-body wellness; yoga wellness;meditation techniques;holistic health practices;wellness fundamentals\n","introduction robotics kids; basic robotics concepts;programming robots;hands-on robotics activities;kid-friendly robotics\n","introduction ux writing; ux writing fundamentals;content strategy;microcopy;user-centric interfaces\n","learn paint watercolors; watercolor painting techniques;color mixing;artwork creation;artistic expression watercolors\n","introduction renewable energy systems; solar power systems;wind energy;sustainable energy solutions;energy sustainability\n","introduction diy home decor; diy crafting techniques;upcycling;creative home design;home decor diy\n","introduction social psychology; social behavior;attitudes;group dynamics;social psychology basics\n","introduction cryptocurrency trading; cryptocurrency market analysis;trading strategies;risk management\n","introduction diy electronics; circuit design;soldering;building simple electronics;electronics diy fundamentals\n","introduction behavioral economics; decision-making processes;cognitive biases;economic psychology;behavioral economics basics\n","introduction storyboarding animation; visual storytelling animation;character design;scene composition;animation storyboarding basics\n","introduction urban sketching; sketching techniques;perspective drawing;capturing urban scenes;urban sketching fundamentals\n","introduction renewable energy economics; cost-benefit analysis renewable energy;market trends renewable energy;financing renewable energy projects\n","introduction diy woodworking; woodworking tool usage;joinery techniques;building simple woodworking projects;woodworking diy fundamentals\n","digital marketing essentials; digital marketing strategies;seo;social media advertising\n","french language mastery; advanced french vocabulary;complex grammar structures;cultural awareness\n","japanese calligraphy; japanese calligraphy brushwork;history calligraphy;artistic expression\n","mandarin chinese business; chinese business vocabulary;business etiquette;negotiation skills\n","german literature appreciation; german literary analysis;cultural context;literary critique\n","italian cooking masterclass; italian cooking techniques;pasta-making;regional italian cuisine\n","russian language survival; russian survival phrases;basic conversation;travel communication\n","arabic calligraphy islamic art; arabic calligraphy styles;islamic art history;artistic expression\n","spanish healthcare professionals; medical spanish vocabulary;patient communication;healthcare terminology\n","chinese martial arts fundamentals; chinese martial arts forms;meditation energy flow;self-defense skills\n","portuguese language immersion; portuguese conversational skills;grammar;regional accents\n","korean pop culture language; korean language basics;k-pop culture;cultural references\n","arabic travelers; travel arabic phrases;cultural awareness;travel communication\n","business spanish professionals; business spanish vocabulary;corporate communication;negotiation skills\n","mandarin chinese calligraphy; chinese calligraphy brushwork;history calligraphy;artistic expression\n","russian literature appreciation; russian literary analysis;russian literary masters;literary critique\n","japanese sushi masterclass; sushi making techniques;ingredient selection;sushi presentation\n","german language culture; german language basics;cultural traditions;german history\n","italian art history; italian art movements;renowned italian artists;art historical analysis\n","mandarin chinese travelers; travel mandarin phrases;cultural awareness;travel communication\n","french culinary delights; classic french recipes;french cooking techniques;french culinary history\n","spanish healthcare providers; medical spanish vocabulary;patient communication;healthcare terminology\n","chinese tea culture language; chinese tea culture;mandarin language basics;tea tasting\n","arabic literature poetry; arabic literary analysis;arabic poetry;literary critique\n","spanish flamenco guitar; flamenco guitar techniques;spanish musical traditions;guitar performance\n","chinese calligraphy seal carving; chinese calligraphy styles;seal carving techniques;artistic expression\n","japanese ikebana art; ikebana styles;floral design techniques;cultural significance\n","german beer culture language; german language basics;beer brewing history;beer tasting\n","brazilian portuguese language culture; brazilian portuguese vocabulary;cultural insights;samba dance basics\n","korean language k-drama enthusiasts; korean language basics;k-drama dialogue;cultural references\n","egyptian arabic travelers; travel arabic phrases;cultural awareness;egyptian customs\n","spanish marketing professionals; marketing spanish vocabulary;advertising techniques;market research\n","japanese tea ceremony; japanese tea ceremony etiquette;japanese language basics;traditional tea preparation\n","russian history politics; russian history overview;political developments;cultural impact\n","italian fashion design; italian fashion designers;fashion history;trend analysis\n","mandarin chinese business communication; advanced chinese business vocabulary;corporate communication;negotiation strategies\n","german fairy tales language; german language basics;fairy tale analysis;cultural significance\n","arabic music instruments; arabic music traditions;instrument introduction;music terminology\n","french wine appreciation; french wine regions;wine tasting techniques;french wine vocabulary\n","spanish art history; spanish art movements;renowned spanish artists;art historical analysis\n","chinese martial arts philosophy; chinese martial arts philosophy;ancient texts;martial principles\n","japanese calligraphy haiku poetry; japanese calligraphy styles;haiku writing;cultural expression\n","arabic culinary delights; arabic cooking techniques;traditional dishes;culinary vocabulary\n","portuguese fado music language; portuguese fado traditions;fado singing;portuguese language enhancement\n","korean taekwondo; korean taekwondo forms;sparring techniques;taekwondo philosophy\n","german environmental sustainability; german environmental initiatives;eco-friendly technologies;sustainability vocabulary\n","chinese opera language; chinese opera styles;mandarin language opera;cultural insights\n","spanish flamenco dance; flamenco dance techniques;choreography;spanish language enhancement\n","brazilian jiu-jitsu portuguese; brazilian jiu-jitsu techniques;portuguese martial arts;brazilian culture\n","korean street food language; korean street food delicacies;language foodies;street food culture\n","arabic islamic art architecture; arabic art architecture;islamic art principles;historical context\n","french theater drama; french theater history;play analysis;theater vocabulary\n","chinese herbal medicine language; chinese herbal medicine principles;mandarin herbalists;herbal terminology\n","italian opera language; italian opera masterpieces;language opera singers;operatic terminology\n","spanish wine tasting; spanish wine regions;wine tasting techniques;spanish wine vocabulary\n","mandarin chinese martial arts films; mandarin chinese film;martial arts film analysis;cultural insights\n","russian ballet language; russian ballet techniques;language ballet;ballet terminology\n","japanese pottery language; japanese pottery techniques;pottery vocabulary;cultural insights\n","brazilian samba dance portuguese; brazilian samba dance techniques;portuguese dancers;samba culture\n","korean kimchi making language; korean kimchi recipes;cooking vocabulary;culinary techniques\n","egyptian hieroglyphics archaeology; egyptian hieroglyphic symbols;archaeological discoveries;historical insights\n","spanish guitar music theory; spanish guitar techniques;music theory;guitar composition\n","chinese zen philosophy language; chinese zen principles;meditation techniques;language philosophers\n","russian literature: tolstoy dostoevsky; analyzing russian novels;tolstoy dostoevsky;literary critique\n","italian renaissance art language; italian renaissance artists;art historical analysis;italian art vocabulary\n","mandarin chinese film analysis; chinese film analysis;mandarin film critics;cinematic terminology\n","arabic oud music language; arabic oud techniques;music notation;oud terminology\n","french wine cheese pairing; french wine cheese pairing;wine tasting techniques;wine vocabulary\n","spanish flamenco singing; flamenco singing styles;vocal techniques;spanish lyrics interpretation\n","brazilian capoeira portuguese; brazilian capoeira techniques;portuguese capoeiristas;capoeira culture\n","korean hanbok sewing language; korean hanbok sewing;sewing vocabulary;cultural insights\n","egyptian mummies funerary practices; egyptian mummy preparation;funerary traditions;historical context\n","spanish wine tapas pairing; spanish wine tapas pairing;wine tasting techniques;spanish culinary vocabulary\n","mandarin chinese calligraphy poetry; chinese calligraphy styles;poetry writing;cultural expression\n","russian folk music language; russian folk music traditions;musical notation;russian music vocabulary\n","italian culinary artistry; italian culinary techniques;plating presentation;italian gastronomy\n","arabic cinema language; arabic film analysis;language film critics;cinematic terminology\n","french poetry language; french poetry analysis;poetic forms;french literary vocabulary\n","chinese traditional medicine language; chinese medicine principles;mandarin healthcare;tcm terminology\n","spanish dance: sevillanas; sevillanas dance techniques;dance vocabulary;spanish dance culture\n","brazilian carnaval samba portuguese; brazilian carnaval samba;portuguese samba dancers;carnaval culture\n","korean traditional hanji art language; korean hanji art techniques;crafting vocabulary;cultural insights\n","egyptian mythology language; egyptian mythological tales;ancient egyptian language;mythological interpretation\n","spanish art: goya picasso; analyzing spanish art;goya picasso;art historical vocabulary\n","chinese martial arts weaponry; chinese martial arts weapons;mandarin martial artists;weaponry vocabulary\n","russian language literature: pushkin chekhov; pushkin chekhov's works;russian literary analysis;literary critique\n","italian opera vocal performance; italian opera arias;italian language singers;operatic interpretation\n","spanish cuisine: paella mastery; spanish paella cooking;culinary vocabulary;spanish gastronomy\n","brazilian jiu-jitsu portuguese; brazilian jiu-jitsu techniques;portuguese bjj practitioners;bjj culture\n","korean royal court cuisine language; korean royal court recipes;culinary vocabulary;cultural insights\n","egyptian hieroglyphics: advanced decoding; advanced hieroglyphic decoding;hieroglyphic text analysis;historical interpretation\n","spanish guitar: flamenco mastery; advanced flamenco guitar techniques;musical composition;spanish guitar vocabulary\n","chinese taoism philosophy language; advanced taoism principles;philosophical discussions;language philosophers\n","russian literature: dostoevsky's masterpieces; analyzing dostoevsky's novels;dostoevsky's literary impact;literary critique\n","italian renaissance art: masters masterpieces; advanced art historical analysis;renaissance masters;italian art vocabulary\n","mandarin chinese film production; mandarin chinese film production;cinematic production techniques;language filmmakers\n","arabic music composition language; arabic music composition techniques;music theory;arabic music vocabulary\n","french wine sommelier certification; french wine certification;wine tasting expertise;sommelier terminology\n","spanish dance: flamenco choreography; advanced flamenco choreography;dance performance skills;spanish dance culture\n","brazilian carnival samba: performance; advanced samba performance;portuguese samba dancers;carnaval culture\n","korean traditional hanbok design language; advanced hanbok design;fashion vocabulary;cultural insights\n","egyptian hieroglyphics: epigraphy; advanced hieroglyphic epigraphy;historical inscriptions;archaeological interpretation\n","spanish poetry: lorca neruda; analyzing lorca neruda;spanish poetic analysis;literary critique\n","chinese martial arts: advanced weaponry; advanced martial arts weapons;mandarin martial artists;weaponry mastery\n","russian language literature: pushkin chekhov; analyzing pushkin chekhov;russian literary analysis;literary critique\n","italian opera: advanced performance; advanced opera performance;italian language opera singers;operatic interpretation\n","spanish cuisine: gourmet chef training; advanced culinary techniques;gourmet cooking skills;spanish gastronomy\n","arabic cinema: filmmaker's masterclass; advanced filmmaking techniques;arabic film production;language filmmakers\n"]}],"source":["# Create a word occurance matrix for the dataset\n","data = pd.read_csv(\"input/educations.csv\")\n","# create a list of a concatenation of the title and description\n","data[\"Temp\"] = data[\"EducationTitle\"] + \"; \" + data[\"SkillsAcquired\"]\n","# filter out stopwords\n","data[\"Temp\"] = data[\"Temp\"].apply(filter_out_stopwords)\n","data = data[\"Temp\"].tolist()\n","df = get_word_occurrence_matrix(data)\n","df.to_csv(\"input/word_matrix.csv\", index=False)"]},{"cell_type":"code","execution_count":null,"metadata":{},"outputs":[],"source":[]}],"metadata":{"kernelspec":{"display_name":"imec","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"}},"nbformat":4,"nbformat_minor":2}
